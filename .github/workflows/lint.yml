name: Lint

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2-beta

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Activate venv
        run: |
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH

      - name: Debug paths
        run: |
          pwd
          ls -al

      - name: mypy Static Type Checker (packages)
        run: |
          mypy \
          --follow-imports=skip \
          --exclude 'migrations/*' \
          -p bc.core \
          -p bc.users \
          -p bc.people

      - name: Flynt f-string Formatter
        run: >
          flynt .
          --line-length=79
          --transform-concats
          --fail-on-change

      - name: Black Code Formatter
        uses: psf/black@stable

  lint-isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2-beta

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: isort Import Sorter
        uses: isort/isort-action@v0.1.0